{"version":3,"sources":["webpack:///./src/components/menuItem/menuItem.js","webpack:///./src/pages/work.js","webpack:///./src/components/footer/footer.js"],"names":["MenuItem","fluid","url","title","node","childImageSharp","bg","px","py","width","className","to","fontSize","my","c","bgColors","Math","floor","random","length","split","d","directory","base","MainPage","edges","useStaticQuery","allFile","page","sx","maxWidth","mx","flexWrap","Footer","id","href"],"mappings":"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","file":"component---src-pages-work-js-6e3bd3008eba7e801da1.js","sourcesContent":["import React from 'react'\nimport { Box } from 'rebass'\nimport Img from 'gatsby-image'\nimport Header from '../header'\nimport './menu.css'\nimport { Link } from 'gatsby'\n\nconst MenuItem = ({ fluid: { url, title, node: { childImageSharp: { fluid }}}, bg }) => {\n    return (\n        <Box px={[0, 0, 2]} py={[0, 0, 2]} width={1/3} className=\"card\">\n            <Link to={url}>\n                <Box className=\"overWrapper\">\n                    <Header fontSize={[ 1, 3, 5 ]} py={[0, 1, 2]} my={[0, 1, 2]} c='white' className=\"menuTitle\">\n                        {title}\n                    </Header>\n                </Box>\n                <Box bg={bg} >\n                    <Img fluid={fluid} className=\"menuImage\"/>\n                </Box>\n            </Link>\n        </Box>\n    )\n}\n\nexport default MenuItem","import * as React from \"react\"\nimport Nav from '../components/nav/nav'\nimport Header from \"../components/header\"\nimport MenuItem from '../components/menuItem/menuItem'\nimport { Box, Flex } from \"rebass\"\nimport { graphql, useStaticQuery } from \"gatsby\"\nimport Footer from \"../components/footer/footer\"\nimport Application from '../components/meta'\n\nconst bgColors = [ 'pinkPrimary pinkDark', 'lightBluePrimary blueDark', 'purplePrimary purpleDark', 'creamPrimary creamDark', 'greenPrimary greenDark' ];\nconst [ bg, d ] = bgColors[Math.floor(Math.random() * bgColors.length)].split(\" \");\n\nconst directory = [\n  {\n    title: \"Artichoke Series\",\n    url: \"/artichoke\",\n    base: \"artichoke.jpg\"\n  },\n  {\n    title: \"Scrapbook\",\n    url: \"/scrapbook\",\n    base: \"insideCover.png\"\n  },\n  {\n    title: \"Providence Map\",\n    url: \"/providence\",\n    base: \"map.jpg\"\n  },\n  {\n    title: \"Memory Palace\",\n    url: \"/memory\",\n    base: \"wii.png\"\n  },\n  {\n    title: \"Charcoal Drawings\",\n    url: \"/charcoal\",\n    base: \"BENEFITST.jpg\"\n  },\n  {\n    title: \"Metashape Portrait\",\n    url: \"/metashape\",\n    base: \"me5.png\"\n  },\n  {\n    title: \"Sound Design\",\n    url: \"/sound\",\n    base: \"audio.png\"\n  },\n  {\n    title: \"Walk on Chalkfield St\",\n    url: \"/walk\",\n    base: \"walkrend1.png\"\n  },\n  {\n    title: \"Useless Utensils\",\n    url: \"/uselessUtensils\",\n    base: \"utensils.jpg\"\n  },\n];\n\nconst MainPage = () => {\n  \n  const { allFile: { edges } } = useStaticQuery(graphql`\n    query MyQuery {\n      allFile(filter: {relativeDirectory: {eq: \"menuItems\"}}) {\n        edges {\n          node {\n            base\n            childImageSharp {\n              fluid {\n                aspectRatio\n                base64\n                sizes\n                srcSet\n                src\n              }\n            }\n          }\n        }\n      }\n    }\n  `);\n\n  for (let node of edges) {\n    for (let page of directory) {\n      if (node.node.base === page.base) {\n        node.title = page.title;\n        node.url = page.url;\n      }\n    }\n  }\n    \n  return (\n    <Box\n      sx={{\n        bg: \"white\",\n        maxWidth: \"100%\",\n        mx: 0,\n        px: 0,\n      }}>\n      <Application/>\n      <Nav bg={bg}/>\n      <Header c={d} fontSize={[5, 6, 7]}>\n        Collection\n      </Header>\n      <Box\n        my={[4, 3, 0]}\n        sx={{\n          maxWidth: 1024,\n          mx: 'auto',\n        }}>\n        <Flex flexWrap='wrap' mx={[0, 1, 3]}>\n          <MenuItem fluid={edges[0]} bg={bg}/>\n          <MenuItem fluid={edges[1]} bg={bg}/>\n          <MenuItem fluid={edges[2]} bg={bg}/>\n        </Flex>\n        <Flex flexWrap='wrap' mx={[0, 1, 3]}>\n          <MenuItem fluid={edges[3]} bg={bg}/>\n          <MenuItem fluid={edges[4]} bg={bg}/>\n          <MenuItem fluid={edges[5]} bg={bg}/>\n        </Flex>\n        <Flex flexWrap='wrap' mx={[0, 1, 3]}>\n          <MenuItem fluid={edges[6]} bg={bg}/>\n          <MenuItem fluid={edges[7]} bg={bg}/>\n          <MenuItem fluid={edges[8]} bg={bg}/>\n        </Flex>\n      </Box>\n      <Footer/>\n    </Box>\n  )\n}\n\nexport default MainPage","import React from 'react'\nimport './footer.css'\n\nconst Footer = () => {\n    return (\n        <div id=\"footerContainer\">\n            <hr id=\"footerBorder\"/>\n            <footer>\n                &copy; Lauren Cochran | Design by her awesome brother\n                <br/>\n                <br/>\n                <a href=\"cochranc.com\">cochranc.com</a>\n            </footer>\n        </div>\n    )\n}\n\nexport default Footer\n"],"sourceRoot":""}